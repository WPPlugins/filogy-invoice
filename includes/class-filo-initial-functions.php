<?php
if ( !defined('ABSPATH') ) exit;

/**
 * Initial Functions
 *
 * Contains Initial Functions
 *
 * @package     Filogy/Classes
 * @subpackage 	Financials
 * @category    Class
 * 
 */
class FILO_Initial_Functions {
	
	/**
	 * construct
	 */
	public function __construct() {
		global $is_filo_settings_ok;


		wsl_log(null, 'class-filo-initial-functions.php output_partner_metaboxes $_GET: ' .  wsl_vartotext($_GET));
		
		wsl_log(null, 'class-filo-initial-functions.php construct: ' .  wsl_vartotext(''));
		
		add_action('admin_menu', array( $this,'add_custom_pages'), 100, 1 );
		add_action('admin_head', array( $this,'remove_custom_page_menu_links'), 10 );
		
		add_filter( 'woocommerce_screen_ids', array($this, 'add_custom_pages_to_woocommerce_screen_ids') );
		
		
		
		//Earlier PRO!				

		//Show, save user metaboxes (originaly WP does not handle metaboxes on user edig page)
		//if the user-edit admin page is opened in filo_partner mode (&mode=filo_partner)
		//then mode parameter in URL contains filo_partner
		if( isset($_GET['mode']) and $_GET['mode'] == 'filo_partner' ) {
				
			/*
			//REMOVE WC PARTNER PROFILE CUSTOM FIELDS
			add_action( 'current_screen', array( $this, 'remove_wc_edit_user_profile' ), 20 ); //remove WC partner profile custom fields right after WP is add it in class-wc-admin.php -> class-wc-admin-profile.php, priority must be higher than in WC
			//remove original WC and other custom fields in filo_partner mode (without this WC fields would be displayed twice, none metabox field display is removed here)
			remove_all_actions( 'show_user_profile' );
			remove_all_actions( 'edit_user_profile' );
			*/
			
			//add_action( 'show_user_profile', 'FILO_Admin_Partner::output_partner_metaboxes', 10, 1 );		
			//add_action( 'edit_user_profile', 'FILO_Admin_Partner::output_partner_metaboxes', 10, 1 );
 			add_action( 'user_edit_form_tag', 'FILO_Admin_Partner::remove_original_user_profile_options', 9998 );
			add_action( 'user_edit_form_tag', 'FILO_Admin_Partner::output_partner_metaboxes', 9999, 1 ); //this should alwys be the last called action (highest priority), because the called function closes a html tag (see in the called function)
			
			add_action( 'personal_options_update', 'FILO_Admin_Partner::save_partner_metaboxes' );
			add_action( 'edit_user_profile_update', 'FILO_Admin_Partner::save_partner_metaboxes' );
			
			//mode=filo_partner parameter should be set after user-edit form submit:	
			//Call insert function, that insert mode parameter into html form action url, to remain this parameter after submit 
			add_filter( 'user_admin_url', 'FILO_Admin_Partner::set_mode_param_in_user_edit_url', 10, 2 );
			add_filter( 'admin_url', 'FILO_Admin_Partner::set_mode_param_in_user_edit_url', 10, 2 );
			add_filter( 'network_admin_url', 'FILO_Admin_Partner::set_mode_param_in_user_edit_url', 10, 2 );
			add_filter('woocommerce_customer_meta_fields', 'FILO_Admin_Partner::change_customer_label_to_partner', 10, 1);
			
		}

		if ( $is_filo_settings_ok ) {
			//Called from frontend checkout page, after order is created (e.g. set open_qty of order)
			add_action( 'woocommerce_checkout_update_order_meta', 'FILO_Financial_Document::create_order_custom_tasks', 10, 2 );
			//do_action( 'woocommerce_checkout_update_order_meta', $order_id, $this->posted );
							
			add_action( 'woocommerce_admin_order_data_after_order_details', 'FILO_Meta_Box_Financial_Document_Head_Data::woocommerce_admin_order_data_after_order_details', 10, 1 );
		}

		if ( $is_filo_settings_ok ) {
			
			add_filter( 'woocommerce_order_number', 'FILO_Financial_Document::change_wc_order_number_static', 10, 2);
					
			add_shortcode( 'filogy_doc', 'FILO_Financial_Document::filogy_doc_shortcode' );
			add_shortcode( 'filogy_doc_show_if', 'FILO_Financial_Document::filogy_doc_shortcode' ); //Show or hide content enclosed short code tags. It is needed because filogy_doc short code cannot include another filogy_doc shortcode, but filogy_doc_show_if can include filogy_doc.
			
		}

		// individual pages
		// handle pages that needs WordPress Bootstrap
		add_action( 'filogy_after_initial_functions',  array($this, 'individual_page_cache_handling') );
		add_filter( 'query_vars', array($this, 'add_individual_page_var') );
		add_filter( 'wp_headers', array($this, 'add_individual_page_header'), 10, 2 );
		add_action( 'template_redirect', array($this, 'add_individual_page_content') );

		//disable wpadminbar (the top bar in admin area) in case of specific individual pages (e.g. filo_generate_pdf)		
		if ( isset($_GET['filo_individual_page']) and in_array( $_GET['filo_individual_page'], array('filo_generate_pdf') ) ) {
			
			show_admin_bar(false);
			 
		}

	}

	/**
	 * Individual pages
	 * 
	 * These pages are those, that needs WordPress functions, but does not need any standard WordPress content.
	 * Earlier it is generated by individual files that loaded WordPress Bootstrap like this: require_once( dirname( __FILE__ ) . '/../../../../../../../wp-load.php' );
	 * 
	 */
	function individual_page_cache_handling() {
 
 		if( isset($_GET['filo_individual_page']) ) {
			$individual_page = wc_clean( $_GET['filo_individual_page'] );
		}			
				
		if ( ! empty($individual_page) ) {
			
			switch ($individual_page) {
				
				case 'template00_document_styles_css':
				case 'template01_document_general_layout_css':
				case 'meta_boxes_order_js':
				
					//Disable caching of dynamic CSS snd JS files
					filo_nocache();										
					break;	
					
				default:
					
					break;
			}
			
		}

	}
	function add_individual_page_var($vars) {
		wsl_log(null, 'class-filo-initial-functions.php add_individual_page_var $vars: ' .  wsl_vartotext($vars));
		
	    $vars[] = 'filo_individual_page';
		
	    return $vars;
	}
	function add_individual_page_header($headers, $wp_object) {

			//[2017/06/15 07:49:26] class-filo-initial-functions.php add_individual_page_header2 $headers: Array
			//(
			//    [Expires] => Wed, 11 Jan 1984 05:00:00 GMT
			//    [Cache-Control] => no-cache, must-revalidate, max-age=0
			//    [Last-Modified] => 
			//    [Content-Type] => text/html; charset=UTF-8
			//)
 
		$individual_page = isset($wp_object->query_vars['filo_individual_page']) ? $wp_object->query_vars['filo_individual_page'] : null; // get_query_var('individual_page');
		
		wsl_log(null, 'class-filo-initial-functions.php add_individual_page_header $individual_page: ' .  wsl_vartotext($individual_page));
		
		if ( ! empty($individual_page) ) {
			
			switch ($individual_page) {
				
				//case 'filo-customizer-document_css':
				case 'template00_document_styles_css':
				case 'template01_document_general_layout_css':
					
					//CSS HTTP HEADER:
					$headers = array(
						'content-type' => 'text/css',
						//'Expires' => gmdate("D, d M Y H:i:s", (time()+900)) . " GMT",
						'Cache-Control' => 'no-cache, must-revalidate', //http://stackoverflow.com/questions/1341089/using-meta-tags-to-turn-off-caching-in-all-browsers 
						'Cache-Control' => 'max-age=0, must-revalidate',
						'Expires' => '0, must-revalidate',
						'Expires' => 'Tue, 01 Jan 1980 1:00:00 GMT, must-revalidate',
						'Pragma' => 'no-cache, must-revalidate',
					);
					
					break;	
					
				case 'meta_boxes_order_js':
				
					//JS HTTP HEADER:
					$headers = array(
						'content-type' => 'application/javascript',
						'Expires' => gmdate("D, d M Y H:i:s", (time()+900)) . " GMT",
					);
					break;	
					
				
				//case 'filo_generate_pdf': //nothing to do	
				default:
					
					
					break;
			}
			
		}

		wsl_log(null, 'class-filo-initial-functions.php add_individual_page_header $headers: ' .  wsl_vartotext($headers));
		
		return $headers;
		
	}
	function add_individual_page_content() {
		
		$individual_page = get_query_var('filo_individual_page');
		
		wsl_log(null, 'class-filo-initial-functions.php check_individual_page_var $individual_page: ' .  wsl_vartotext($individual_page));
		
		if ( ! empty($individual_page) ) {
			
			switch ($individual_page) {

				/*case 'filo_customizer_document_css':

					include(FILOFW()->plugin_path() .  '/assets/css/filo-customizer-document.css.php');
			    	exit;
					break;*/

				case 'template00_document_styles_css':
					
					include(FILO()->plugin_path() .  '/templates/00_filogy_original/documents/css/document_styles.css.php');
			    	exit;
					break;


				case 'template01_document_general_layout_css':
					
					include(FILO()->plugin_path() .  '/templates/01_filogy_standard/documents/css/document_general_layout.css.php');
			    	exit;
					break;
					
				case 'meta_boxes_order_js':				

					include(FILOFW()->plugin_path() .  '/assets/js/admin/meta-boxes-order.js.php');
			    	exit;
					break;
				
				case 'filo_generate_pdf':	
					
					include(FILOFW()->plugin_path() .  '/includes/filo_generate_pdf.php');
			    	exit;
					break;
					
				default:
					
					break;
			}
			
		}
		
	}
	
	function add_custom_pages() {
		
		global $is_filo_settings_ok;
		//$is_filo_settings_ok = FILO_Do_Setup::is_filo_settings_ok( $strickt_p = false );
		
		/*add_menu_page(
			'Example Plugin List Table', 
			'List Table Example', 
			'activate_plugins', 
			'tt_list_test', 
			'tt_render_list_page'
		);*/
						
		//add_dashboard_page( 'Transaction Matching', 'Transaction Matching', 'read', 'do_trans_match', array( $this, 'create_custom_page') );
		//add_dashboard_page( 'Initial Product Inventory Settings', 'Initial Product Inventory Settings', 'read', 'initial_product_inventory_settings', array( $this, 'create_custom_page') );
		//add_submenu_page( 'post.php', 'Transaction Matching', 'Transaction Matching', 'read', 'do_trans_match', array( $this, 'create_custom_page') );
		//add_submenu_page( 'index.php', $page_title, $menu_title, $capability, $menu_slug, $function );

		//Remove from menu, but stay tha page title by using hide_custom_page_menu filter
		//(remove_submenu_page is not good, because it is unset the page title also: remove_submenu_page( 'index.php', 'custom-dashboard' );)
		global $submenu;
		
		$hide_menu_array = array();
		$hide_menu_array = apply_filters( 'hide_custom_page_menu', $hide_menu_array );
		
		foreach ($submenu['index.php'] as $key => $submenu_item) {
			if ( in_array($submenu_item[2], $hide_menu_array ) ){
			//	unset($submenu['index.php'][$key][0]);
			}
		}
			
		// Add partner edit menu
		//add_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function );
		//This menu is REMOVED. Partner financial data is available from the customised "Users" menu, and not from a new "Partners" menu
		/*add_submenu_page(
			'profile.php', 								//$parent_slug 
			__('Partners', 'filo_text'), 			//$page_title
			__('Partners', 'filo_text'), 			//$menu_title
			'list_users', 								//$capability
			'users.php?mode=filo_partner' 				//$menu_slug
			//array($this, 'output_parent_list')		//$function (navigate to the default users.php page using ?mode=filo_partner url parameter)
		);
		*/
		
		// link to the default users.php page using ?mode=filo_partner url parameter
		// (so replace ?page=filo_partner to ?mode=filo_partner url parameter)
		// without this WP navigate to a blank bage
		// user_admin_url, admin_url and network_admin_url filters ensure that mode param remain always in URL

		wsl_log(null, 'class-filo-initial-functions.php add_custom_pages 1: ' .  wsl_vartotext(''));
		
		//Register admin page without displaying in the menu 
		//add_submenu_page( 'woocommerce', __( 'Filogy Setup Jedi', 'filo_text' ),  __( 'Filogy Setup Jedi', 'filo_text' ) , 'filo_admin_setup_jedi', 'filo_admin_setup_jedi', array( $this, 'create_about_page' ) );
		add_submenu_page( 'filo_financials', __( 'Filogy Setup Jedi', 'filo_text' ),  __( 'Filogy Setup Jedi', 'filo_text' ) , 'filo_admin_setup_jedi', 'filo_admin_setup_jedi', array( $this, 'create_about_page' ) );

		// add a secondary link to WooCommerce Settings page
		//submenu_link:
		$document_setting_link_to_add = add_query_arg( array( 'page' => 'wc-settings', 'tab' => 'financials' ), 'admin.php' ); //not: admin_url( 'admin.php' );  admin.php?page=wc-settings&tab=document
		add_submenu_page( 'filo_financials', __( 'WooCommerce Settings', 'woocommerce' ),  __( 'Settings', 'woocommerce' ) , 'manage_woocommerce', $menu_slug = $document_setting_link_to_add, $function = ''); 


		//check if there is any financial doc in the system. If not, then Doc Design Customizer must not be displayed
		$finadoc_title_list = FILO_Financial_Document::get_finadoc_title_list( $doc_types = null, $orderby = null, $item_limit = 1, $is_detailed = false );
		if ( $is_filo_settings_ok and ! empty($finadoc_title_list) ) {
			//submenu_link:
			$customizer_link_to_add = esc_url( add_query_arg(
				array(
					array( 'autofocus' => array( 'control' => 'color1' ) ),
					'filo_usage' => 'doc', //apply '&filo_usage=doc' url parameter
					'return' => urlencode( wp_unslash( wc_clean( $_SERVER['REQUEST_URI'] ) ) ), //+wc_clean
					'filo_sample_order_id' => '', //it is attantionally empty, because the value is alwas read from the appropriate option (it is always refreshed), if it is empty
				),
				'customize.php' // admin_url( 'customize.php' )
			) );
			add_submenu_page( 'filo_financials', __( 'Doc Design Customizer', 'filo_text' ), __( 'Doc Design Customizer', 'filo_text' ) , 'manage_woocommerce', $menu_slug = $customizer_link_to_add, $function = ''); 
		}
		
		//Eliminate 'Thank you for creating with WordPress.' and 'Version x.x' footer texts from filo_admin_setup_jedi page
		//if ( isset( $_GET['page'] ) && $_GET['page'] == 'filo_admin_setup_jedi' ) {
		if ( isset( $_GET['page'] ) && in_array( $_GET['page'], array('filo_admin_setup_jedi', 'tax_control_page') ) ) {
			add_filter( 'admin_footer_text', array( $this, 'get_empty_footer_text') );
			add_filter( 'update_footer', array( $this, 'get_empty_footer_text') );
		}
				
	}

	function remove_custom_page_menu_links() {
		wsl_log(null, 'class-filo-initial-functions.php remove_custom_page_menu_links 0: ' .  wsl_vartotext(''));
		//remove_submenu_page( 'admin.php', 'do_trans_match' );
	}

	/*	
	function output_parent_list() {
		// redirect to the default users.php page using ?mode=filo_partner url parameter
		// (so replace ?page=filo_partner to ?mode=filo_partner url parameter)
		// without this WP navigate to a blank bage
		// user_admin_url, admin_url and network_admin_url filters ensure that mode param remain always in URL
		
		wp_redirect( admin_url( 'users.php?mode=filo_partner' ) );
		
	}
	*/ 

		
	function add_custom_pages_to_woocommerce_screen_ids($screen_ids) {
		
		// filogy_page prefix needed if the page in Filogy menu
		// woocommerce_page prefix needed if the page in WooCommerce menu
		// product_page prefix needed if the page in Product menu
		// more prefix is possible if we want to move it between menus, and do not want to set these settings
		
		$screen_ids[] = 'woocommerce_page_filo_admin_setup_jedi'; //admin_page_filo_admin_setup_jedi - if it is in WooCommerce menu
		$screen_ids[] = 'filogy_page_filo_admin_setup_jedi'; //admin_page_filo_admin_setup_jedi - if it is in Filogy menu
				 
		return $screen_ids;
	}

	function create_custom_page() {

		global $filo_custom_page_action;
		$filo_custom_page_action = 'admin.php'; // according to add_submenu parent slug edit.php or admin.php 
		include_once( FILOFW()->plugin_path() .  '/templates/custom_page.php' );
		wsl_log(null, 'class-filo-initial-functions.php create_custom_page: ' .  wsl_vartotext( '' ));

	}


	function create_about_page() {
		//Setup Jedi
		include_once( FILO()->plugin_path() .  '/includes/admin/filo-admin-setup-jedi.php' );
	}

	function get_empty_footer_text() {
		return null;
	}

	function set_color_contants() {
		
		//backgrounds
		define("COLOR_01", "#fbd46b"); //COLOR_01_YELLOW
		define("COLOR_02", "#ecaf60"); //COLOR_02_ORANGE
		define("COLOR_03", "#a34f98"); //COLOR_03_VIOLET
		define("COLOR_04", "#69b6e3"); //COLOR_04_LIGHT_BLUE
		define("COLOR_05", "#457caf"); //COLOR_05_DARK_BLUE
		define("COLOR_06", "#438f9d"); //COLOR_06_TURQUOISE
		define("COLOR_07", "#b7bd5f"); //COLOR_07_GREEN 
		define("COLOR_08", "#6f6f6f"); //COLOR_08_GRAY4
		define("COLOR_09", "#7f7f7f"); //COLOR_09_GRAY3
		define("COLOR_10", "#a6a6a6"); //COLOR_10_GRAY2

		//lines 1
		define("COLOR_11", "#e67e22"); //COLOR_02_ORANGE
		define("COLOR_12", "#a34f98"); //COLOR_03_VIOLET
		define("COLOR_13", "#75b9e7"); //LIGHT_BLUE_1
		define("COLOR_14", "#3498db"); //COLOR_04_LIGHT_BLUE_2
		define("COLOR_15", "#457caf"); //COLOR_05_DARK_BLUE
		define("COLOR_16", "#438f9d"); //COLOR_06_TURQUOISE
		define("COLOR_17", "#b3bd26"); //COLOR_07_GREEN 
		define("COLOR_18", "#6f6f6f"); //COLOR_08_GRAY4
		define("COLOR_19", "#7f7f7f"); //COLOR_09_GRAY3

		//lines 2 (wc like)
		define("COLOR_21", "#3498db"); //wc dark blue
		define("COLOR_22", "#75b9e7"); //wc light blue
		define("COLOR_23", "#438f9d"); //turquoise
		define("COLOR_24", "#e67e22"); //wc green
		define("COLOR_25", "#c0392b"); //wc red
		define("COLOR_26", "#1abc9c"); //wc yellow
		define("COLOR_27", "#b8c0c5"); //COLOR_08_GRAY4
		define("COLOR_28", "#d4d9dc"); //COLOR_09_GRAY3
		
		
	}

}	
